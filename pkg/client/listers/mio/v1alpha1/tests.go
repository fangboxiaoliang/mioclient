/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "hidevops.io/mioclient/pkg/apis/mio/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TestsLister helps list Testses.
type TestsLister interface {
	// List lists all Testses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Tests, err error)
	// Testses returns an object that can list and get Testses.
	Testses(namespace string) TestsNamespaceLister
	TestsListerExpansion
}

// testsLister implements the TestsLister interface.
type testsLister struct {
	indexer cache.Indexer
}

// NewTestsLister returns a new TestsLister.
func NewTestsLister(indexer cache.Indexer) TestsLister {
	return &testsLister{indexer: indexer}
}

// List lists all Testses in the indexer.
func (s *testsLister) List(selector labels.Selector) (ret []*v1alpha1.Tests, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Tests))
	})
	return ret, err
}

// Testses returns an object that can list and get Testses.
func (s *testsLister) Testses(namespace string) TestsNamespaceLister {
	return testsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TestsNamespaceLister helps list and get Testses.
type TestsNamespaceLister interface {
	// List lists all Testses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Tests, err error)
	// Get retrieves the Tests from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Tests, error)
	TestsNamespaceListerExpansion
}

// testsNamespaceLister implements the TestsNamespaceLister
// interface.
type testsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Testses in the indexer for a given namespace.
func (s testsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Tests, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Tests))
	})
	return ret, err
}

// Get retrieves the Tests from the indexer for a given namespace and name.
func (s testsNamespaceLister) Get(name string) (*v1alpha1.Tests, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tests"), name)
	}
	return obj.(*v1alpha1.Tests), nil
}
